{"ast":null,"code":"var _jsxFileName = \"/Users/yuliya.zhukova/iCloud Drive (Archive)/1. our Documents/Yuliya relajate/01. Java Script/Project -2 (JS)/goit-react-hw-04-feedback/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './Statistics/Statistics';\nimport { Section } from './Section/Section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const onLeaveFeedback = option => {\n    setState(prevState => ({ ...prevState,\n      [option]: prevState[option] + 1\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedback = () => {\n    return Math.round(state.good * 100) / countTotalFeedback();\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedback().toFixed(2);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        options: Object.keys(state),\n        onLeaveFeedback: onLeaveFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Statistics\",\n      children: total > 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n        good: state.good,\n        neutral: state.neutral,\n        bad: state.bad,\n        total: total,\n        positivePercentage: positivePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"there is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"zRtjbELCU9pFz0MTfOrwwZJAjEE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yuliya.zhukova/iCloud Drive (Archive)/1. our Documents/Yuliya relajate/01. Java Script/Project -2 (JS)/goit-react-hw-04-feedback/src/components/App.jsx"],"names":["useState","FeedbackOptions","Statistics","Section","App","state","setState","good","neutral","bad","onLeaveFeedback","option","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedback","Math","round","total","positivePercentage","toFixed","keys"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,OAAO,EAAE,CAApB;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GAAD,CAAlC;;AAEA,QAAMC,eAAe,GAAGC,MAAM,IAAI;AAChCL,IAAAA,QAAQ,CAACM,SAAS,KAAK,EACrB,GAAGA,SADkB;AAErB,OAACD,MAAD,GAAUC,SAAS,CAACD,MAAD,CAAT,GAAoB;AAFT,KAAL,CAAV,CAAR;AAID,GALD;;AAOA,QAAME,kBAAkB,GAAG,MAAM;AAC/B,WAAOC,MAAM,CAACC,MAAP,CAAcV,KAAd,EAAqBW,MAArB,CAA4B,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAlD,EAAyD,CAAzD,CAAP;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAG,MAAM;AAClC,WAAOC,IAAI,CAACC,KAAL,CAAWhB,KAAK,CAACE,IAAN,GAAa,GAAxB,IAA+BM,kBAAkB,EAAxD;AACD,GAFD;;AAIA,QAAMS,KAAK,GAAGT,kBAAkB,EAAhC;AACA,QAAMU,kBAAkB,GAAGJ,qBAAqB,GAAGK,OAAxB,CAAgC,CAAhC,CAA3B;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,OAAO,EAAEV,MAAM,CAACW,IAAP,CAAYpB,KAAZ,CADX;AAEE,QAAA,eAAe,EAAEK;AAFnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,YAAf;AAAA,gBACGY,KAAK,GAAG,CAAR,gBACC,QAAC,UAAD;AACE,QAAA,IAAI,EAAEjB,KAAK,CAACE,IADd;AAEE,QAAA,OAAO,EAAEF,KAAK,CAACG,OAFjB;AAGE,QAAA,GAAG,EAAEH,KAAK,CAACI,GAHb;AAIE,QAAA,KAAK,EAAEa,KAJT;AAKE,QAAA,kBAAkB,EAAEC;AALtB;AAAA;AAAA;AAAA;AAAA,cADD,gBASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAuBD,CA5CM;;GAAMnB,G;;KAAAA,G","sourcesContent":["import { useState } from 'react';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './Statistics/Statistics';\nimport { Section } from './Section/Section';\n\nexport const App = () => {\n  const [state, setState] = useState({ good: 0, neutral: 0, bad: 0 });\n\n  const onLeaveFeedback = option => {\n    setState(prevState => ({\n      ...prevState,\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedback = () => {\n    return Math.round(state.good * 100) / countTotalFeedback();\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedback().toFixed(2);\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(state)}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total > 0 ? (\n          <Statistics\n            good={state.good}\n            neutral={state.neutral}\n            bad={state.bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <p>there is no feedback</p>\n        )}\n      </Section>\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}